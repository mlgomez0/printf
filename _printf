include "holberton.h"
/**
*_printf- prints element passed
*@format: list that has the format
*Return: Integer
*/
int _printf(const char *format, ...)
{
	om_t struc1[] = {
		{'c', print_char},
		{'s', print_str},
		{'d', print_dec},
		{'i', print_int},
		{'%', print_perc};
	};
	int i = 0, j = 0, k = 0, a = 0;
	va_list list;

	va_start(list, format);

	while (format && format[i])
	{
		if ((format[i] != '%') && (format[i] != '\\'))
		{
			_putchar(format[i]);
		}
		else
		{
			if (format[i] == '%')
			{
				while (j < 5)
				{
					if (format[i+1] == struc1[j].ele)
					{
						struc1[j].func(list);
						a = 1;
					}
					j++;
				}
				if (a == 1)
					i++;
			}/*Qué pasa sí no después de % no encuentra coincidencias */

			{


			}
		}


		while (j < 4)
		{
			if (format[i] == hps[j].let)
			{
				a = 1;
				hps[j].fun(list);
			}
			j++;
		}
		j = 0;
		i++;
	}
	printf("\n");
	va_end(list);
}
/**
 *print_char - prints a given char
 *@list: char to be printed
 */

void print_char(va_list list)
{
	printf("%c", va_arg(list, int));
}

/**
 *print_int - prints a given integer
 *@list: int to be printed
 */
void print_int(va_list list)
{
	printf("%i", va_arg(list, int));
}
/**
 *print_float - prints a given float
 *@list: float to be printed
 */
void print_float(va_list list)
{
	printf("%f", va_arg(list, double));
}
/**
 *print_str - prints a given str
 *@list:string to be printed
 */
void print_str(va_list list)
{
	char *l;

	l = va_arg(list, char *);
	if (l != NULL)
	{
		printf("%s", l);
		return;
	}
	printf("(nil)");
}
